<html>

<head>
<link rel="stylesheet"
	href="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css">

</head>

<body ng-app='app' ng-controller='CelendarController' ng-cloak>
	<div class="row" ng-init='init()'>
		<div class="col-md-4 col-sm-4 col-lg-4">
			<div class="form-group">
				<label for="celendarTypeDropdown">Calendar Type:</label> <select
					class="form-control" id="celendarTypeDropdown"
					ng-model='order.calendarType' ng-change='calendarTypeChange()'>
					<option ng-selected='order.calendarType==0' value="0">Conventional</option>
					<option ng-selected='order.calendarType==1' value="1">BroadCast</option>
				</select>
				<p class="help-block"></p>
			</div>
		</div>
		<div class="col-md-4 col-sm-4 col-lg-4"
			ng-show='order.calendarType==0'>
			<div class="form-group">
				<label for="startDate">Start Date:</label>
				<div class="input-group">
					<input type="text" class="form-control"
						uib-datepicker-popup="{{::CalendarService.format}}"
						ng-model="order.startDate"
						min-mode="'day'" max-mode="'day'" show-weeks="true" show-button-bar="false"
						min-date='orderStartDateStartLimit' max-date='orderStartDateEndLimit'
						ng-change='adjustOrderEndDateCalendar()'
						is-open="orderStartDateInlineOptions.isOpen" starting-day='0'
						
						
						ng-required="true" ng-readonly='true' /> <span
						class="glyphicon glyphicon-calendar input-group-addon"
						id="startDateCalendar" ng-click="toggleCalendar('orderStartDate')"></span>
				</div>
				<p class="help-block"></p>
			</div>
		</div>
		<div class="col-md-4 col-sm-4 col-lg-4"
			ng-show='order.calendarType==0'>
			<div class="form-group">
				<label for="endDate">End Date:</label>
				<div class="input-group">
					<input type="text" class="form-control"
						uib-datepicker-popup="{{::CalendarService.format}}"
						ng-model="order.endDate" ng-change=''
						min-date='orderEndDateStartLimit' max-date='orderEndDateEndLimit'
						min-mode="'day'" max-mode="'day'" show-weeks="true" show-button-bar="false"
						is-open="orderEndDateInlineOptions.isOpen" starting-day='0'
						ng-required="true"
						ng-readonly='true' /> <span
						class="glyphicon glyphicon-calendar input-group-addon"
						id="endDateCalendar" ng-click="toggleCalendar('orderEndDate')"></span>
				</div>
				<p class="help-block"></p>
			</div>
		</div>
		<div class="col-md-4 col-sm-4 col-lg-4"
			ng-show='order.calendarType==1'>
			<div class="form-group">
				<label for="startDate">Start Date:</label>
				<div class="input-group">
					<input type="text" class="form-control"
						uib-datepicker-popup="{{::CalendarService.format}}"
						ng-model="order.startDate"
						min-date='orderStartDateStartLimit' max-date='orderStartDateEndLimit'
						min-mode="'day'" max-mode="'day'" show-weeks="true" show-button-bar="false"
						ng-change='adjustOrderEndDateCalendar()'
						is-open="orderStartDateInlineOptions.isOpen" starting-day='1'
						ng-required="true"
						ng-readonly='true' /> <span
						class="glyphicon glyphicon-calendar input-group-addon"
						id="startDateCalendar" ng-click="toggleCalendar('orderStartDate')"></span>
				</div>
				<p class="help-block"></p>
			</div>
		</div>
		<div class="col-md-4 col-sm-4 col-lg-4"
			ng-show='order.calendarType==1'>
			<div class="form-group">
				<label for="endDate">End Date:</label>
				<div class="input-group">
					<input type="text" class="form-control"
						uib-datepicker-popup="{{::CalendarService.format}}"
						ng-model="order.endDate" ng-change=''
						min-date='orderEndDateStartLimit' max-date='orderEndDateEndLimit'
						min-mode="'day'" max-mode="'day'" show-weeks="true" show-button-bar="false"
						is-open="orderEndDateInlineOptions.isOpen" starting-day='1'
						ng-required="true"
						ng-readonly='true' /> <span
						class="glyphicon glyphicon-calendar input-group-addon"
						id="endDateCalendar" ng-click="toggleCalendar('orderEndDate')"></span>
				</div>
				<p class="help-block"></p>
			</div>
		</div>
	</div>
	<script
		src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
	<script
		src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js"></script>
	<script
		src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.5/angular.min.js"></script>
	<script src="tpls.js"></script>
	<script>
	angular.module('app',['ui.bootstrap']).controller("CelendarController", ['$scope', '$uibModal', '$http', '$timeout', 'CalendarService', function ($scope, $uibModal, $http, $timeout, CalendarService) {
	        $scope.order = {};
	        $scope.startingDay = 0;
	        this.CalendarService = CalendarService;
	      /*   $scope.orderStartDateStartLimit=new Date();
	        $scope.orderStartDateEndLimit= new Date();
	        $scope.orderEndDateStartLimit=new Date();
	        $scope.orderStartDateEndLimit.setYear($scope.orderStartDateEndLimit.getYear()+5); */
	        /* 
	        $scope.orderStartDateEndLimit.setMonth($scope.orderStartDateEndLimit.getMonth()+3);
	        $scope.orderStartDateEndLimit.setDate(1);
	        $scope.orderStartDateEndLimit.setDate($scope.orderStartDateEndLimit.getDate()-1); */
	        $scope.adjustOrderStartDateCalendar = function (dates) {
	        	var today=new Date();
	        	if(typeof(dates)!='undefined'){//broadcast
		        	if(dates.broadCastStartDay.getTime()<today.getTime()){
		        		 $scope.orderStartDateStartLimit = new Date(today.getTime())/* dates.broadCastStartDay */;
		        	}
		        	else{
		        		$scope.orderStartDateStartLimit = new Date(dates.broadCastStartDay.getTime())/* dates.broadCastStartDay */;
		        	}
		        	if(dates.broadCastEndDay.getTime()>today.getTime()){
		        		 $scope.orderStartDateEndLimit = new Date(dates.broadCastEndDay.getTime());
		        	}
		        	else{
		        		$scope.orderStartDateStartLimit = new Date(today.getTime());
		        		
		        	}
		        }
	        	else{//conventional
	        		$scope.orderStartDateStartLimit = new Date();
	        		var d = new Date();
	        		d.setYear(d.getYear()+10);
	        		//$scope.orderStartDateEndLimit = d;
	        	}
	        }
	        //$scope.adjustOrderStartDateCalendar();
	        $scope.init = function () {
	            CalendarService.init();
	            /*$scope.order.startDate = new Date();*/
	            $scope.adjustOrderStartDateCalendar()
	            $scope.adjustOrderEndDateCalendar();
	            console.log("asdfasdfasdf");
	             $scope.orderStartDateInlineOptions = {
	            	showWeeks: true,
	            };
	            $scope.orderEndDateInlineOptions = {
	                showWeeks: true,
	            }; 
	            $scope.order.calendarType = "0";
	        };
	        
	        $scope.adjustOrderEndDateCalendar = function (dates) {
	        	 /*  $scope.orderStartDateStartLimit = new Date(dates.broadCastStartDay.getTime())
                 $scope.orderStartDateEndLimit = new Date(dates.broadCastEndDay.getTime());  */
	        };
	        $scope.toggleCalendar = function (scopeVar) {
	        	$scope.countOfMove=0;
	            $scope[scopeVar + 'InlineOptions'].isOpen = !$scope[scopeVar + 'InlineOptions'].isOpen;
	        };
	        $scope.calendarTypeChange = function () {
	            $scope.order.startDate = null;
	            $scope.order.endDate = null;
	       /*      $scope.orderStartDateStartLimit=null;
	            $scope.orderStartDateEndLimit=null;
	            $scope.orderEndDateStartLimit=null;
	            $scope.orderStartDateEndLimit=null; */
	            $scope.startingDay = $scope.startingDay === 0 ? 1 : 0;
	            if($scope.order.calendarType === "1"){
	                  var d = new Date();
	                    d.setDate(15);
	                    dates = CalendarService.getBroadCastStartAndEndDate(d);
	                    $scope.adjustOrderStartDateCalendar(dates);
	                    $scope.adjustOrderEndDateCalendar(dates);
	            }
	            else{
	            $scope.adjustOrderStartDateCalendar();
	            $scope.adjustOrderEndDateCalendar();
	            }
	        };
	        $scope.countOfMove = 0;
	        var dates = {};
	   /*      $scope.$watch('orderStartInlineOptions.isOpen', function () {
	            console.log("inside  orderStartInlineOptions.isOpen" + $scope.countOfMove);
	            $scope.countOfMove = 0;
	        });
	        $scope.$watch('orderStartInlineOptions.isOpen', function () {
	            console.log("inside  orderStartInlineOptions.isOpen" + $scope.countOfMove);
	            $scope.countOfMove = 0;
	        }); */
	        $scope.$watch('countOfMove', function (newVal,oldVal) {
	            if ($scope.order.calendarType === "1" && typeof (newVal) != 'undefined') {
	                if (newVal != oldVal) {
	                    var d = new Date();	
	                    d.setDate(15);
	                    /* if (typeof (oldVal) != 'undefined')
	                        {d.setMonth(d.getMonth() + newVal - oldVal);}
	                    else { */
	                        d.setMonth(d.getMonth() + newVal);
	                    /* } */
	                    //console.log(d);
	                    var dates = CalendarService.getBroadCastStartAndEndDate(new Date(d.getTime()));
	                    /*           $timeout(function(){*/
	                    $scope.adjustOrderStartDateCalendar(dates);
	                    $scope.adjustOrderEndDateCalendar(dates);
	                   
	                }
	            }
	        });
	    }]);
	
	
	
	 angular.module('app').service("CalendarService", [function () {
	        var CalendarService = {};
	        CalendarService.init = function () {
	            CalendarService.format = 'dd-MMM-yyyy';
	        };
	        CalendarService.getBroadCastStartAndEndDate = function (data) {
	            var broadCastStartDay, broadCastEndDay;
	            var d = data;
	            var d1 = new Date(d.getTime());
	            var d2 = new Date(d.getTime());
	            d1.setMonth(d1.getMonth() + 1);
	            d1.setDate(1);
	            d1.setDate(d1.getDate() - 1);
	            while (d1.getDay() !== 1) {
	                d1.setDate(d1.getDate() - 1);
	            }
	            if (d1.getTime() <= d.getTime()) {
	                broadCastStartDay = new Date(d1.getTime());
	            } else {
	                d2.setDate(1);
	                while (d2.getDay() != 1) {
	                    d2.setDate(d2.getDate() - 1);
	                }
	                broadCastStartDay = new Date(d2.getTime());
	            }
	            var d3 = new Date(d.getTime());
	            d3.setMonth(d3.getMonth() + 1);
	            d3.setDate(1);
	            d3.setDate(d3.getDate() - 1);
	            while (d3.getDay() !== 0) {
	                d3.setDate(d3.getDate() - 1);
	            }
	            broadCastEndDay = d3;
	            return {
	                'broadCastStartDay': broadCastStartDay,
	                'broadCastEndDay': broadCastEndDay
	            };
	        };
	        return CalendarService;
	    }]);
    </script>
</body>

</html>
